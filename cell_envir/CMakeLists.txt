cmake_minimum_required(VERSION 3.8)
project(cell_envir)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()



# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_action REQUIRED)
find_package(moveit_core REQUIRED)
find_package(moveit_ros_planning REQUIRED)
find_package(moveit_ros_planning_interface REQUIRED)
find_package(interactive_markers REQUIRED)
find_package(geometric_shapes REQUIRED)
find_package(control_msgs REQUIRED)
find_package(moveit_msgs REQUIRED)
find_package(xacro REQUIRED)
find_package(rviz2 REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_sensor_msgs REQUIRED)
find_package(gazebo_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(gazebo_ros2_control REQUIRED) 
find_package(sensor_msgs REQUIRED) 
find_package(std_msgs REQUIRED) 


##### Generate the executables ####

add_executable(simple_traject
    src/simple_traject.cpp)
target_include_directories(simple_traject
    PUBLIC include)
ament_target_dependencies(simple_traject
    ament_cmake
    rclcpp
    moveit_core
    moveit_ros_planning_interface
    moveit_ros_planning
    control_msgs
    geometry_msgs
    )


install(
  DIRECTORY launch urdf config src world
  DESTINATION share/${PROJECT_NAME}
)

install(TARGETS 
    simple_traject
    DESTINATION lib/${PROJECT_NAME}
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
